{"is_source_file": true, "format": "Python", "description": "This file defines the main API application for a notes management backend, implemented using FastAPI. It includes routes for health check, user registration and login (JWT authentication), and CRUD operations for notes, with pagination and search support. It also sets up middleware, configures environment variables, and initializes database models.", "external_files": ["src.api.models", "src.api.database", "src.api.auth", "src.api.schemas"], "external_methods": ["create_access_token", "get_password_hash", "verify_password", "get_current_user"], "published": ["app"], "classes": [{"name": "FastAPI", "description": "Main FastAPI application instance."}], "methods": [{"name": "health_check()", "description": "Health check endpoint returning service status.", "scope": "", "scopeKind": ""}, {"name": "register_user(payload: UserCreateRequest, db: Session = Depends(get_db))", "description": "Endpoint for registering a new user with email and password.", "scope": "", "scopeKind": ""}, {"name": "login(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db))", "description": "Endpoint for user login, issuing JWT token.", "scope": "", "scopeKind": ""}, {"name": "list_notes( page: int = Query(1, ge=1, description=\"Page number starting at 1\"), page_size: int = Query(10, ge=1, le=100, description=\"Items per page\"), q: Optional[str] = Query(None, description=\"Search query for title/content\"), current_user: User = Depends(get_current_user), db: Session = Depends(get_db), )", "description": "Retrieve paginated list of notes owned by current user, with optional search.", "scope": "", "scopeKind": ""}, {"name": "create_note( payload: NoteCreateRequest, current_user: User = Depends(get_current_user), db: Session = Depends(get_db), )", "description": "Create a new note for authenticated user.", "scope": "", "scopeKind": ""}, {"name": "get_note( note_id: int = Path(..., ge=1), current_user: User = Depends(get_current_user), db: Session = Depends(get_db), )", "description": "Retrieve a specific note by its ID, only if the user owns it.", "scope": "", "scopeKind": ""}, {"name": "update_note( payload: NoteUpdateRequest, note_id: int = Path(..., ge=1), current_user: User = Depends(get_current_user), db: Session = Depends(get_db), )", "description": "Update an existing note by ID, only if the owner.", "scope": "", "scopeKind": ""}, {"name": "delete_note( note_id: int = Path(..., ge=1), current_user: User = Depends(get_current_user), db: Session = Depends(get_db), )", "description": "Delete a note by ID, only if the owner.", "scope": "", "scopeKind": ""}, {"name": "on_startup()", "description": "FastAPI startup event handler to seed demo user if none exists.", "scope": "", "scopeKind": ""}, {"name": "seed_demo_user(db: Session)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["Base.metadata.create_all", "secrets.token_urlsafe", "os.getenv", "get_password_hash", "create_access_token", "verify_password", "get_current_user"], "search-terms": ["FastAPI notes API", "JWT auth", "CRUD notes", "pagination", "search notes", "user registration", "user login"], "state": 2, "file_id": 3, "knowledge_revision": 21, "git_revision": "c907d951127e97f60b5f4b9df03c137c663059d1", "revision_history": [{"9": "c907d951127e97f60b5f4b9df03c137c663059d1"}, {"10": "c907d951127e97f60b5f4b9df03c137c663059d1"}, {"21": "c907d951127e97f60b5f4b9df03c137c663059d1"}], "ctags": [{"_type": "tag", "name": "ACCESS_TOKEN_EXPIRE_MINUTES", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-29153-29207/notes_backend/src/api/main.py", "pattern": "/^ACCESS_TOKEN_EXPIRE_MINUTES = int(os.getenv(\"ACCESS_TOKEN_EXPIRE_MINUTES\", \"60\"))$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "DEFAULT_SECRET", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-29153-29207/notes_backend/src/api/main.py", "pattern": "/^DEFAULT_SECRET = secrets.token_urlsafe(32)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "SECRET_KEY", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-29153-29207/notes_backend/src/api/main.py", "pattern": "/^SECRET_KEY = os.getenv(\"SECRET_KEY\", DEFAULT_SECRET)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-29153-29207/notes_backend/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "create_note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-29153-29207/notes_backend/src/api/main.py", "pattern": "/^def create_note($/", "language": "Python", "kind": "function", "signature": "( payload: NoteCreateRequest, current_user: User = Depends(get_current_user), db: Session = Depends(get_db), )"}, {"_type": "tag", "name": "delete_note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-29153-29207/notes_backend/src/api/main.py", "pattern": "/^def delete_note($/", "language": "Python", "kind": "function", "signature": "( note_id: int = Path(..., ge=1), current_user: User = Depends(get_current_user), db: Session = Depends(get_db), )"}, {"_type": "tag", "name": "frontend_origin", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-29153-29207/notes_backend/src/api/main.py", "pattern": "/^frontend_origin = os.getenv(\"FRONTEND_ORIGIN\", \"http:\\/\\/localhost:3000\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "get_note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-29153-29207/notes_backend/src/api/main.py", "pattern": "/^def get_note($/", "language": "Python", "kind": "function", "signature": "( note_id: int = Path(..., ge=1), current_user: User = Depends(get_current_user), db: Session = Depends(get_db), )"}, {"_type": "tag", "name": "health_check", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-29153-29207/notes_backend/src/api/main.py", "pattern": "/^def health_check():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "list_notes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-29153-29207/notes_backend/src/api/main.py", "pattern": "/^def list_notes($/", "language": "Python", "kind": "function", "signature": "( page: int = Query(1, ge=1, description=\"Page number starting at 1\"), page_size: int = Query(10, ge=1, le=100, description=\"Items per page\"), q: Optional[str] = Query(None, description=\"Search query for title/content\"), current_user: User = Depends(get_current_user), db: Session = Depends(get_db), )"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-29153-29207/notes_backend/src/api/main.py", "pattern": "/^def login(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "on_startup", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-29153-29207/notes_backend/src/api/main.py", "pattern": "/^def on_startup():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "register_user", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-29153-29207/notes_backend/src/api/main.py", "pattern": "/^def register_user(payload: UserCreateRequest, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(payload: UserCreateRequest, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "seed_demo_user", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-29153-29207/notes_backend/src/api/main.py", "pattern": "/^def seed_demo_user(db: Session):$/", "language": "Python", "kind": "function", "signature": "(db: Session)"}, {"_type": "tag", "name": "update_note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-29153-29207/notes_backend/src/api/main.py", "pattern": "/^def update_note($/", "language": "Python", "kind": "function", "signature": "( payload: NoteUpdateRequest, note_id: int = Path(..., ge=1), current_user: User = Depends(get_current_user), db: Session = Depends(get_db), )"}], "hash": "3751f46fc35cd955129e4c1a35f97d51", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/main.py", "fields": [{"name": "ACCESS_TOKEN_EXPIRE_MINUTES = int(os.getenv(\"ACCESS_TOKEN_EXPIRE_MINUTES\", \"60\"))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "DEFAULT_SECRET = secrets.token_urlsafe(32)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SECRET_KEY = os.getenv(\"SECRET_KEY\", DEFAULT_SECRET)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "frontend_origin = os.getenv(\"FRONTEND_ORIGIN\", \"http:\\/\\/localhost:3000\")", "scope": "", "scopeKind": "", "description": "unavailable"}]}
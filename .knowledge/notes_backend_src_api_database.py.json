{"is_source_file": true, "format": "Python", "description": "This file sets up the database connection and session management for the application, specifically configuring SQLAlchemy to use a SQLite database by default, and defines a dependency function for obtaining a database session.", "external_files": ["sqlalchemy", "os"], "external_methods": ["create_engine", "sessionmaker", "os.getenv"], "published": ["get_db"], "classes": [], "methods": [{"name": "get_db()", "description": "Provides a database session as a dependency, handling proper cleanup after use.", "scope": "", "scopeKind": ""}], "calls": ["os.getenv", "create_engine", "sessionmaker", "SessionLocal()", "db.close()"], "search-terms": ["database connection", "SQLAlchemy setup", "session management", "get_db"], "state": 2, "file_id": 5, "knowledge_revision": 22, "git_revision": "", "revision_history": [{"12": ""}, {"22": ""}], "ctags": [{"_type": "tag", "name": "DATABASE_URL", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-29153-29207/notes_backend/src/api/database.py", "pattern": "/^DATABASE_URL = os.getenv(\"DATABASE_URL\", \"sqlite:\\/\\/\\/.\\/notes.db\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "SessionLocal", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-29153-29207/notes_backend/src/api/database.py", "pattern": "/^SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "connect_args", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-29153-29207/notes_backend/src/api/database.py", "pattern": "/^connect_args = {\"check_same_thread\": False} if DATABASE_URL.startswith(\"sqlite\") else {}$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "engine", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-29153-29207/notes_backend/src/api/database.py", "pattern": "/^engine = create_engine(DATABASE_URL, connect_args=connect_args, future=True)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "get_db", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-29153-29207/notes_backend/src/api/database.py", "pattern": "/^def get_db():$/", "language": "Python", "kind": "function", "signature": "()"}], "hash": "86b14ebf4770f33eca624b584ad5abb0", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/database.py", "fields": [{"name": "DATABASE_URL = os.getenv(\"DATABASE_URL\", \"sqlite:\\/\\/\\/.\\/notes.db\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "connect_args = {\"check_same_thread\": False} if DATABASE_URL.startswith(\"sqlite\") else {}", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "engine = create_engine(DATABASE_URL, connect_args=connect_args, future=True)", "scope": "", "scopeKind": "", "description": "unavailable"}]}
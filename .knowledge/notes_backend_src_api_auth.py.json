{"is_source_file": true, "format": "Python", "description": "This file defines authentication-related utilities for a FastAPI application, including password hashing, JWT token creation, and current user retrieval via token authentication.", "external_files": ["src/api/database", "src/api/models"], "external_methods": ["get_db", "User"], "published": ["verify_password", "get_password_hash", "create_access_token", "get_current_user"], "classes": [], "methods": [{"name": "bool verify_password(plain_password: str, hashed_password: str)", "description": "Verify a plaintext password against its hashed version.", "scope": "", "scopeKind": ""}, {"name": "str get_password_hash(password: str)", "description": "Hash a plaintext password.", "scope": "", "scopeKind": ""}, {"name": "str create_access_token(data: dict, expires_delta: Optional[timedelta] = None)", "description": "Create a signed JWT access token with optional expiration.", "scope": "", "scopeKind": ""}, {"name": "User get_current_user(token: str = Depends(oauth2_scheme), db: Session = Depends(get_db))", "description": "Retrieve the current user based on the provided JWT token.", "scope": "", "scopeKind": ""}], "calls": ["pwd_context.verify", "pwd_context.hash", "jwt.encode", "jwt.decode", "get_db", "User.query.filter", "User.first"], "search-terms": ["auth.py", "JWT", "OAuth2PasswordBearer", "create_access_token", "get_current_user", "verify_password"], "state": 2, "file_id": 8, "knowledge_revision": 18, "git_revision": "", "ctags": [{"_type": "tag", "name": "ALGORITHM", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-29153-29207/notes_backend/src/api/auth.py", "pattern": "/^ALGORITHM = \"HS256\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "SECRET_KEY", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-29153-29207/notes_backend/src/api/auth.py", "pattern": "/^SECRET_KEY = os.getenv(\"SECRET_KEY\", \"dev-secret-change-me\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "create_access_token", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-29153-29207/notes_backend/src/api/auth.py", "pattern": "/^def create_access_token(data: dict, expires_delta: Optional[timedelta] = None) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(data: dict, expires_delta: Optional[timedelta] = None)"}, {"_type": "tag", "name": "get_current_user", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-29153-29207/notes_backend/src/api/auth.py", "pattern": "/^def get_current_user(token: str = Depends(oauth2_scheme), db: Session = Depends(get_db)) -> User/", "language": "Python", "typeref": "typename:User", "kind": "function", "signature": "(token: str = Depends(oauth2_scheme), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "get_password_hash", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-29153-29207/notes_backend/src/api/auth.py", "pattern": "/^def get_password_hash(password: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(password: str)"}, {"_type": "tag", "name": "oauth2_scheme", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-29153-29207/notes_backend/src/api/auth.py", "pattern": "/^oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/login\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "pwd_context", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-29153-29207/notes_backend/src/api/auth.py", "pattern": "/^pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "verify_password", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-29153-29207/notes_backend/src/api/auth.py", "pattern": "/^def verify_password(plain_password: str, hashed_password: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(plain_password: str, hashed_password: str)"}], "hash": "f49abbf0c7162ad872ba13bdfd5bef85", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/auth.py", "fields": [{"name": "ALGORITHM = \"HS256\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SECRET_KEY = os.getenv(\"SECRET_KEY\", \"dev-secret-change-me\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/login\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"18": ""}]}